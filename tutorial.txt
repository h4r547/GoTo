Problem Statement: Navigating a file system via terminal is a tedious process. Especially, if after a bunch of cd and ls commands, if you end up at the wrong location. So, to deal with this, I've written a script that can store location bookmarks.

1. Name of command: grep
grep is used to search for a particular pattern in a file, and return the lines that contain that pattern.

Example of its usage:

  -bash-4.2$ cat examplefile.txt
  this is line 1 Computer Systems
  this is line 2 computer

  -bash-4.2$ grep Computer examplefile.txt
  this is line 2 Computer Systems
Some additional options:

-i: allows you to search for words in a case-insensitive manner:

  $ grep -i computer examplefile.txt
  this is line 1 Computer Systems
  this is line 2 computer

-c: Another option instructs grep to count the number of times a pattern appears.

  $ grep -c computer examplefile.txt
  1

-v: You can search for lines that don't contain a pattern by adding the "-v" option.

  $ grep -v unix examplefile.txt
  this is line 1 Computer Systems

2. Name of Command: pwd
pwd is used to print/ return the current working directory.

Example of its usage:
-bash-4.2$ pwd
/home/prateekpisat1

3. Name of Command: cd
cd is used to move to another directory.

Example of its usage:
  -bash-4.2$ pwd
  /home/prateekpisat1
  -bash-4.2$ cd newDir
  -bash-4.2$ pwd
  /home/prateekpisat1/newDir

4. Name of Command: mv
mv is used to replace one file with another

Example of its usage:
  -bash-4.2$ ls
  file1
  -bash-4.2$ mv file1 file2
  -bash-4.2$ ls
  file2

5. Name of command: echo
echo is used to print a message/ data to the terminal.

Example of its usage:
  -bash-4.2$ echo "Hello World."
  Hello World.

6. Name of Command: read
read is used as prompt to accept for the user.

Example of its usage:
  -bash-4.2$ read x
  12
  -bash-4.2$ echo $x
  -bash-4.2$ 12

7. Name of command: mkdir
mkdir is used to make a new directory.

Example of its usage:
  -bash-4.2$ mkdir newDir
  -bash-4.2$ cd newDir
  -bash-4.2$ pwd
  /home/prateekpisat1/newDir

8. Name of command: touch
 touch is used to create a new if file if it does not already exist.

Example of its usage:
  -bash-4.2$ touch goto.conf
  -bash-4.2$ ls
  goto.conf

9. Name of command: cut
cut in UNIX is used cutting sections from each line of files.

Examples of its usage:
   -bash-4.2$ echo 'baz' | cut -b 2
    a
   -bash-4.2$echo 'baz' | cut -b 1-2
    ba


************************************************************************
*BEFORE RUNNING THE SCRIPT*
Each shell script executes in its own sub-shell. So, commands such as "cd" won't affect the parent-shell.
Since bookmarks are primarily depends on the cd command, we need to ensure that the command can be run in a shell-script, and performs the required task.
To avoid this, we source the script instead of running it. Sourcing (done by. or source) causes the script to be executed in the same shell instead of running in its own sub-shell.
Sourcing the script does not create a new shell. All commands are run in the current shell and changes to the environment take effect in the current shell.

Instead of running the script as ./script-name, use:
   . ./script-name.sh OR source ./scriptname.sh
************************************************************************
Here is a shell script that stores and loads file system locations bookmarks.

The script expects a command line argument.
"-s" to bookmark the current location.
"-g" to navigate to a bookmarked location.

How to run the SCRIPT and an example run.
-bash-4.2$ . ./goto.sh -s
Bookmark Name:
goto
Saved
-bash-4.2$ pwd
/home/prateekpisat1/CS5600/GoTo
-bash-4.2$ cd ..
-bash-4.2$ pwd
/home/prateekpisat1/CS5600
-bash-4.2$ . ./GoTo/goto.sh -g
Where to go?
goto
-bash-4.2$ pwd
/home/prateekpisat1/CS5600/GoTo

if [ "$1" = "-s" ]
then
  echo "Bookmark Name: "
  read bm
  mkdir -p ~/GoTo
  (cd ~/GoTo && touch goto.conf)
  if [ $(grep -c "$bm " ~/GoTo/goto.conf)  = 0 ]
  then
    echo "$bm : $(pwd)" >> ~/GoTo/goto.conf
    echo "Saved"
  else
    echo "Bookmark Already Exists"
  fi
elif [ "$1" = "-g" ]
then
  echo "Where to go? "
  read bm
  if [ $(grep -c -i "$bm " ~/GoTo/goto.conf)  = 0 ]
  then
    echo "Bookmark doesn't exist"
  else
    loc=$(grep -i "$bm " ~/GoTo/goto.conf | cut -d ':' -f 2)
    if [ -d $loc ]
    then
      cd $loc
    else
      echo "The directory does not exist."
      grep -v "$loc" ~/GoTo/goto.conf > temp.txt
      mv temp.txt ~/GoTo/goto.conf
      echo "The entry has been deleted."
    fi
  fi
else
  echo "Invalid Option. Use '-s' to save this location. Use '-g' to goto a location"
fi
